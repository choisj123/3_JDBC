package edu.kh.jdbc.board.view;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Scanner;

import edu.kh.jdbc.board.model.service.BoardService;
import edu.kh.jdbc.board.model.vo.Board;
import edu.kh.jdbc.member.model.vo.Member;

//service + DAO 필요

public class BoardView {
	private Scanner sc = new Scanner(System.in);
	
	// 로그인 회원 정보 저장용 변수
	private Member LoginMember;
	
	private BoardService service = new BoardService();
	
	/*
	 * 	 * 게시판 기능 (Board View, Service, DAO, board-query.xml)
	 * 
	 * 1. 게시글 목록 조회(작성일 내림차순) --> 빡쎌듯
	 * 	  (게시글 번호, 제목[댓글 수], 작성자명, 작성일, 조회수 )
	 * 
	 * 2. 게시글 상세 조회(게시글 번호 입력 받음)
	 *    (게시글 번호, 제목, 내용, 작성자명, 작성일, 조회수, 
	 *     댓글 목록(작성일 오름차순 )
	 *     
	 *     2-1. 댓글 작성
	 *     2-2. 댓글 수정 (자신의 댓글만)
	 *     2-3. 댓글 삭제 (자신의 댓글만)
	 * 
	 *     // 자신이 작성한 글 일때만 메뉴 노출
	 *     2-4. 게시글 수정
	 *     2-5. 게시글 삭제
	 *     
	 *     
	 * 3. 게시글 작성(제목, 내용 INSERT) 
	 * 	-> 작성 성공 시 상세 조회 수행
	 * 
	 * 4. 게시글 검색(제목, 내용, 제목+내용, 작성자)
	 * 
	 * */
	

	public void boardMenu(Member LoginMember) {
		// 전달 받은 로그인 회원 정보를 필드에 저장
		this.LoginMember = LoginMember; // 로그인한 member 넣어주기

		int input = -1;
		
		do {
			try {
				System.out.println("<< 게시판 기능 >>");
				System.out.println("1. 게시글 목록 조회");
				System.out.println("2. 게시글 상세 조회");
				System.out.println("3. 게시글 작성");
				System.out.println("4. 게시글 검색");
				// 되돌아가기는 어떻게????
				System.out.print("\n메뉴 선택 >> ");
				input = sc.nextInt();
				
				switch(input) {
				case 1: selectAllBoard(LoginMember); break;
				case 2: selectBoard(); break;
				case 3: insertBoard(); break;
				case 4: searchBoard() ; break;
				default: System.out.println("메뉴에 작성된 번호만 입력해주세요.");
			
			}
			}catch(InputMismatchException e) {
				System.out.println("[입력 형식이 올바르지 않습니다]\n");
				sc.nextLine(); 
			}
			
			
		}while(input != 0);
		
	}


	/** 1. 게시글 목록 조회 화면
	 * (게시글 번호, 제목[댓글 수], 작성자명, 작성일, 조회수 \)(작성일 내림차순)
	 * @param LoginMember
	 */
	private void selectAllBoard(Member LoginMember) {
		System.out.println("\n[게시글 목록 조회]");
		
		
		try {
			List<Board> boardList = new ArrayList<Board>();
			
			boardList = service.selectAllBoard(LoginMember);
			
			if(boardList.isEmpty()) {
				System.out.println("[등록된 게시글이 없습니다]");
			}else {
				System.out.println("----------------------------------------------------------------------------");
				System.out.println(" 게시글 번호 |   제목 [댓글 수]    | 작성자명 |           작성일          | 조회수 ");
				System.out.println("---------------------------------------------------------------------------");
				for(Board board: boardList) {
					System.out.printf("      %d      |  %s [%d]  |  %s  | %s |  %d\n",
							board.getBoardNo(),
							board.getBoardTitle(),
							service.countComment()
							,
							
							board.getMemberName(),
							board.getBoardCreateDate(),
							board.getReadCount());
				}
				System.out.println();
			}
				
			
			
		}catch(Exception e) {
			System.out.println("\n<<게시글 목록 조회 중 에러 발생>>\n");
			e.printStackTrace();
		}
		
	}
	
	public void countComment()  {
		try {
			List<Integer> countList = service.countComment();
			for(int count : countList) {
				System.out.println();
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		
	}
	
	
	
	
	private void selectBoard() {
		// TODO Auto-generated method stub
		
	}
	private void insertBoard() {
		// TODO Auto-generated method stub
		
	}

	private void searchBoard() {
		// TODO Auto-generated method stub
		
	}
	
	
	
	
	}


